version: '2'
services:

  # db and testdb define local database containers for development.
  # If you plan to use a remote database (like RDS), remove the db and testdb
  # services and add your own database hosts to the db_host and test_db_host
  # environment variables.
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: mysecretpassword

  testdb:
    image: postgres
    environment:
      POSTGRES_PASSWORD: mysecrettestpassword

  app:
    build: .

    # # Expose ports for development.
    # ports:
    #   - '3000:3000'
    # # Use volumes to edit files from the host OS in development.
    # volumes:
    #   - .:/opt/actioncenter

    # # Serve Rails using unicorn in production.
    # command: bash -c unicorn
    # # Automatically restart the app on exit in production.
    # restart: always

    environment: &env
      #
      # Start of application environment variables
      #

      # Standard Rails stuff (required)
      secret_key_base: ''
      devise_secret_key: ''
      force_ssl: 'false'
      time_zone: 'Pacific Time (US & Canada)''

      # Database configuration (required)
      db_adapter: postgresql
      db_database: postgres
      db_username: postgres
      db_password: mysecretpassword
      db_port: '5432'
      db_host: db

      # Test database configuration
      test_db_password: mysecrettestpassword
      test_db_username: postgres
      test_db_database: postgres
      test_db_adapter: postgresql
      test_db_port: '5432'
      test_db_host: testdb

      # Social media (required)
      twitter_handle: 'example'
      twitter_related: 'example examplelive'
      facebook_handle: 'example'

      # the following twitter vars are needed only if you want to auto-fetch
      # user avatars when they're added as an individual tweet target
      twitter_oauth_token: ''
      twitter_oauth_token_secret: ''
      twitter_api_key: ''
      twitter_api_secret: ''

      # Mail settings (required)
      smtp_username: ''
      smtp_password: ''
      smtp_address: 'smtp.example.com'
      mailings_from: 'Example Action <actioncenter@example.com>'

      # Mail settings (not required)
      smtp_port: "587"
      smtp_domain: 'act.example.com'
      smtp_authentication: plain
      smtp_enable_starttls_auto: "true"

      # AWS (required)
      storage: 's3'
      amazon_access_key_id: ''
      amazon_secret_access_key: ''
      amazon_region: us-west-1
      amazon_bucket: actioncenter

      # AWS (not required)
      amazon_bucket_url: 'act.s.example.com'
      amazon_authorize_key: ''

      # Third party integration (required)
      congress_forms_url: 'http://phantomdc.example.com'
      smarty_streets_id: ''
      smarty_streets_token: ''

      # Third party integration (not required)
      call_tool_url: 'https://call.example.com/'
      call_tool_api_key: ''
      congress_forms_debug_key: ''
      supporters_api_key: ''
      supporters_host: https://actioncenter:somekey@supporters.example.com
      supporters_path: /civicrm/example-action-api
      cors_allowed_domains: https://example.org https://some.example.com

      # Error reporting (not required)
      sentry_dsn: ''

      # Misc.
      ROLE: web

      #
      # End of application environment variables
      #

  app_db_migrate:
    build: .
    depends_on: ["db"]
    restart: never
    command: sh -c '(bundle exec rake db:version || bundle exec rake db:setup) && bundle exec rake db:migrate'
    volumes: ["./db:/opt/actioncenter/db"]
    environment:
      <<: *env
      ROLE: worker

  app_testdb_migrate:
    build: .
    depends_on: ["testdb"]
    restart: never
    command: sh -c '(bundle exec rake db:version || bundle exec rake db:setup) && bundle exec rake db:migrate'
    volumes: ["./db:/opt/actioncenter/db"]
    environment:
      <<: *env
      RAILS_ENV: test
      ROLE: worker

  # Uncomment these services to run cron/delayed job
  #
  # cron:
  #   build: .
  #   restart: always
  #   command: cron -f -L 15
  #   environment:
  #     <<: *env
  #     ROLE: worker
  #
  # delayed_jobs:
  #   build: .
  #   restart: always
  #   command: bundle exec rake jobs:work
  #   environment:
  #     <<: *env
  #     ROLE: worker
